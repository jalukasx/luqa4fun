#include <Wire.h>
#include <Adafruit_PWMServoDriver.h>
#include <Servo.h>

Adafruit_PWMServoDriver pwm = Adafruit_PWMServoDriver(0x40);

#define SERVOMIN 100
#define SERVOMAX 580


const int buttonPin0 = 7;
const int buttonPin1 = 4;

byte guzik0 = 0;

int buttonState;             // the current reading from the input pin
int lastButtonState = LOW;   // the previous reading from the input pin

unsigned long lastDebounceTime = 0;  // the last time the output pin was toggled
unsigned long debounceDelay = 50;    // the debounce time; increase if the output flickers

void setup()
{
pwm.begin();
pwm.setPWMFreq(50);
  
    pinMode(buttonPin0, INPUT);
    pinMode(buttonPin1, INPUT);
   
}

void loop() {

  // read the state of the switch into a local variable:
  int reading = digitalRead(buttonPin0);

  // check to see if you just pressed the button
  // (i.e. the input went from LOW to HIGH), and you've waited long enough
  // since the last press to ignore any noise:

  // If the switch changed, due to noise or pressing:
  if (reading != lastButtonState) {
    // reset the debouncing timer
    lastDebounceTime = millis();
  }

  if ((millis() - lastDebounceTime) > debounceDelay) {
    // whatever the reading is at, it's been there for longer than the debounce
    // delay, so take it as the actual current state:

    // if the button state has changed:
    if (reading != buttonState) {
      buttonState = reading;

    }
  
 {
    if (guzik0==0) 
    { 
      guzik0=1; 
      pwm.setPWM(0, 0, 270);
    }
    else
    { 
      guzik0=0;
      pwm.setPWM(0, 0, 380);
    }
   }  
  }
   lastButtonState = reading;
}
